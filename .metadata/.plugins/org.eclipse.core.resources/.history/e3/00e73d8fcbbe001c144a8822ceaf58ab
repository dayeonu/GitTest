import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Test3{

	public static void main(String[] args) throws IOException, InterruptedException {

			// 배열의 데이터 갯수 찾기. 
		
		int count=0;
		{
			//1.파일을 생성하는 순서
			File file = new File("data/data1.txt");  //화면에 표시하고자 하는 파일을 선택한다. File file = new File("경로넣기");
			FileInputStream src = new FileInputStream(file);  // 파일 읽어오기. 
			// FileIntputStream을 사용햇으면, close()메소드를 통해 닫아주는 것이 중요한 포인트.!
			
			Scanner sc = new Scanner(src);

			while(sc.hasNext()) { // sc.hasNext는 스캐너 객체로 데이터가 들어왔는지 여부를 반환하는 함수. 입력이 잇으면, true 
				String tmp = sc.next(); 
				/*
				 * sc.next() 다음 토큰을 읽습니다. 
				 * sc.nextLine() 다음 행을 읽습니다.
				 * sc.hasNext() 토큰이 잇는지 확인하여boolean을 리턴합니다. 공백의 경우 무시합니다. 
				 * sc.hasNextLine() 행이 있는지 확인 후 boolean을 리턴합니다.
				 * 줄바뀜이 있으면 true를 리턴합니다.
				 */
				System.out.printf("%s " , tmp); //데이터의 갯수
				count++;
			}
			System.out.println("\ncount : " + count);

			sc.close();
			src.close();
		}
	}
}